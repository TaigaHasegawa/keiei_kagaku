//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 1.0;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Streets(0,0),Square_2D(10, 10, Loop, North, 1){
        AgtType RedTurtle(0, 0)[0] {
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim RedNeighbors(0, 0) As AgtSet = ();
            Dim BlueNeighbors(0, 0) As AgtSet = ();
            Dim Num_RedNeighbors(0, 0) As Double = (0.0);
            Dim Num_BlueNeighbors(0, 0) As Double = (0.0);
            Dim Nakama_Rate(0, 0) As Double = (0.0);
        }
        AgtType BlueTurtle(0, 0)[0] {
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim RedNeighbors(0, 0) As AgtSet = ();
            Dim BlueNeighbors(0, 0) As AgtSet = ();
            Dim Num_RedNeighbors(0, 0) As Double = (0.0);
            Dim Num_BlueNeighbors(0, 0) As Double = (0.0);
            Dim Nakama_Rate(0, 0) As Double = (0.0);
        }
    }
    Dim Num_Reds(0, 0) As Integer = (0);
    Dim Num_Blues(0, 0) As Integer = (0);
    Dim Seg_Demand(0, 0) As Double = (0.0);
    Dim Seg_Degree(0, 0) As Double = (0.0);
    Dim Rate_Unsatisfied(0, 0) As Double = (0.0);
    Dim Num_Unsatisfied(0, 0) As Integer = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.NUM_REDS = 1(40);
    UNIVERSE.NUM_BLUES = 1(40);
    UNIVERSE.SEG_DEMAND = 1(0.6000000000000001);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{

Dim i as integer

For i = 0 to Universe.Num_Reds-1
	CreateAgt(Universe.Streets.RedTurtle)
Next i

For i = 0 to Universe.Num_Blues-1
	CreateAgt(Universe.Streets.BlueTurtle)
Next i

Dim RTurtles As AgtSet
Dim BTurtles As AgtSet
DIm ATurtles As AgtSet

MakeAgtSet(RTurtles, Universe.Streets.RedTurtle)
MakeAgtSet(BTurtles, Universe.Streets.BlueTurtle)

MergeAgtSet(ATurtles, RTurtles)
MergeAgtSet(ATurtles, BTurtles)

RandomPutAgtSetCell(ATurtles, False)

}

Univ_Step_Begin{

}

Univ_Step_End{
Dim i as integer
Dim j as integer


Dim Turtle as Agt
Dim RTurtleSet as Agtset
Dim BTurtleSet as Agtset
Dim AllTurtleSet as Agtset
Dim RNeighbors as Agtset
Dim BNeighbors as Agtset 
Dim KindredRate as Double
Dim KindredRateTotal as Double

KindredRateTotal = 0
Universe.Num_Unsatisfied = 0


MakeAgtSet(RTurtleSet, Universe.Streets.RedTurtle)
MakeAgtSet(BTurtleSet, Universe.Streets.BlueTurtle)
MergeAgtSet(AllTurtleSet, RTurtleSet)
MergeAgtSet(AllTurtleSet, BTurtleSet)

For Each Turtle in RTurtleSet
	MakeOneAgtsetAroundPositionCell(RNeighbors, Universe.Streets, Turtle.X, Turtle.Y, Turtle.Layer, 1, Universe.Streets.RedTurtle)
	RemoveAgt(RNeighbors, Turtle)
	MakeOneAgtsetAroundPositionCell(BNeighbors, Universe.Streets, Turtle.X, Turtle.Y, Turtle.Layer, 1, Universe.Streets.BlueTurtle)
	If (CountAgtset(RNeighbors)+CountAgtset(BNeighbors)) == 0	then
		KindredRate = 0
	else
		KindredRate = CountAgtset(RNeighbors) / (CountAgtset(RNeighbors)+CountAgtset(BNeighbors))
	End if

	KindredRateTotal = KindredRateTotal + KindredRate 
	
	If KindredRate < Universe.Seg_Demand  then
		Universe.Num_Unsatisfied = Universe.Num_Unsatisfied + 1
	End if	
Next Turtle

For Each Turtle in BTurtleSet
	MakeOneAgtsetAroundPositionCell(BNeighbors, Universe.Streets, Turtle.X, Turtle.Y, Turtle.Layer, 1, Universe.Streets.BlueTurtle)
	RemoveAgt(BNeighbors, Turtle)
	MakeOneAgtsetAroundPositionCell(RNeighbors, Universe.Streets, Turtle.X, Turtle.Y, Turtle.Layer, 1, Universe.Streets.RedTurtle)
	If (CountAgtset(RNeighbors)+CountAgtset(BNeighbors)) == 0	then
		KindredRate = 0
	else
		KindredRate = CountAgtset(BNeighbors) / (CountAgtset(RNeighbors)+CountAgtset(BNeighbors))
	End if

	KindredRateTotal = KindredRateTotal + KindredRate 
	
	If KindredRate < Universe.Seg_Demand  then
		Universe.Num_Unsatisfied = Universe.Num_Unsatisfied + 1
	End if	
Next Turtle

	Universe.Seg_Degree = KindredRateTotal/CountAgtset(AllTurtleSet)
	Universe.Rate_Unsatisfied = Universe.Num_Unsatisfied/CountAgtset(AllTurtleSet)

}

Univ_Finish{

}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.STREETS.REDTURTLE
Agt_Init{

}

Agt_Step{

//赤亀を数える
MakeOneAgtSetAroundOwnCell(My.RedNeighbors, 1, Universe.Streets.RedTurtle, False)
My.Num_RedNeighbors = CountAgtSet(My.RedNeighbors)

//青亀を数える
MakeOneAgtSetAroundOwnCell(My.BlueNeighbors, 1, Universe.Streets.BlueTurtle, False)
My.Num_BlueNeighbors = CountAgtSet(My.BlueNeighbors)

//仲間率を計算します
If My.Num_RedNeighbors+My.Num_BlueNeighbors == 0 then
	My.Nakama_Rate = 0
else
	My.Nakama_Rate = My.Num_RedNeighbors / (My.Num_RedNeighbors+My.Num_BlueNeighbors)
end if

//不満なら移動します	
If My.Nakama_Rate < Universe.Seg_Demand then
		MoveToSpaceOwnCell(2)
end if



}
#end_rule UNIVERSE.STREETS.REDTURTLE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.STREETS.BLUETURTLE
Agt_Init{


}

Agt_Step{

MakeOneAgtSetAroundOwnCell(My.RedNeighbors, 1, Universe.Streets.RedTurtle, False)
My.Num_RedNeighbors = CountAgtSet(My.RedNeighbors)

MakeOneAgtSetAroundOwnCell(My.BlueNeighbors, 1, Universe.Streets.BlueTurtle, False)
My.Num_BlueNeighbors = CountAgtSet(My.BlueNeighbors)

If My.Num_RedNeighbors+My.Num_BlueNeighbors == 0 then
	My.Nakama_Rate = 0
else
	My.Nakama_Rate = My.Num_BlueNeighbors / (My.Num_RedNeighbors+My.Num_BlueNeighbors)
end if

If My.Nakama_Rate < Universe.Seg_Demand then
	MoveToSpaceOwnCell(2)
end if

}
#end_rule UNIVERSE.STREETS.BLUETURTLE




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 100;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 0;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Log_File = "", Fixed, Append, 0;
    Replay_Log_File = "", Fixed, Append, 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "UNIVERSE.STREETS";
    Map_Name = "Streets";
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Title = "Streets";
    Axis_Label = "", "";
    Draw_Range = 0, 0, 9, 9;
    Ruled_Line = Yes;
    Chess_Type_Display_Position = Yes;
    Remarks = Yes;
    Legend_Pos = Top;
    Background_Color = 255, 255, 255;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Disable = No;
    Position_x = 25;
    Position_y = 16;
    Size_x = 387;
    Size_y = 368;
    Origin_Position = 2;
    Output {
        Map_Element_Name = "RedTurtle";
        Map_Element = Agent_Variable;
        Output_Expression = "UNIVERSE.Streets.RedTurtle";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 255,102,102;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "UNIVERSE.STREETS.REDTURTLE.NUM_BLUENEIGHBORS";
    }
    Output {
        Map_Element_Name = "BlueTurtle";
        Map_Element = Agent_Variable;
        Output_Expression = "UNIVERSE.Streets.BlueTurtle";
        Draw_Line = No;
        Collection_Name = "";
        Line_Type = 0;
        Line_Arrow = 0;
        Line_Width = 0;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = 51,153,255;
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "UNIVERSE.STREETS.BLUETURTLE.NUM_REDNEIGHBORS";
    }
}


//-------------------------------------------------------
// Time Graph Display Definition Division
//-------------------------------------------------------
Time_Graph {
    Graph_Name = "Segregation_Degree";
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Title = "Segregation_Degree";
    Axis_Label = "", "";
    Scale = 0, 0.0, 1000, 1.0, 100, 0.5;
    Remarks = Yes;
    Legend_Pos = Top;
    Background_Color = 255, 255, 255;
    Disable = No;
    Position_x = 325;
    Position_y = 172;
    Size_x = 459;
    Size_y = 393;
    Output {
        Graph_Element_Name = "Seg_Degree";
        Line_Color = 255, 0, 0;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.Seg_Degree";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
    }
    Output {
        Graph_Element_Name = "Seg_Demand";
        Line_Color = 0, 0, 255;
        Line_Width = 3;
        Marker_Id = 0;
        Output_Expression = "Universe.Seg_Demand";
        Expression_Value_Display = No;
        Effective_Fraction_Figures = 0;
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 541, 71, 157, 252;
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Seg_Demand";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "UNIVERSE.Seg_Demand";
        Slider_Range_Max = 10;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 0.1;
        Slider_Value = "6";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Red";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "UNIVERSE.Num_Reds";
        Slider_Range_Max = 100;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "40";
    }
    Panel_Item {
        Item_Type = Slider;
        Item_Name = "Blue";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "UNIVERSE.Num_Blues";
        Slider_Range_Max = 100;
        Slider_Value_Min = 0.0;
        Slider_Value_Step = 1.0;
        Slider_Value = "40";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
    Window_Hide_Run = 1;
    Debug_Position_x = 30;
    Debug_Position_y = 14;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 15;
    Console_Position_y = 495;
    Console_Size_x = 300;
    Console_Size_y = 103;
    Componen_Tree_Position_x = 0;
    Componen_Tree_Position_y = 0;
    Componen_Tree_Size_x = 300;
    Componen_Tree_Size_y = 250;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}
