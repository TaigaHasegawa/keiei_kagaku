//====================================================================/
//　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　/
// artisoc                                                            /
//                                                                    /
//====================================================================/

Version = 4.0;



//-------------------------------------------------------
// Component Tree
//-------------------------------------------------------
UNIVERSE {
    Space Network(0,0),Square_2D(50, 50, !Loop, North, 1, Map_3D){
        AgtType Node(0, 0)[0] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim Color(0, 0) As Integer = (0);
            Dim Link_AgtSet(0, 0) As AgtSet = ();
            Dim GroupID(0, 0) As Integer = (0);
            Dim Z(0, 0) As Double = (0.0);
            Dim Angle(0, 0) As Double = (0.0);
        }
        AgtType Camera(0, 0)[1] {
            Dim ID(0, 0) As Integer = (0);
            Dim X(0, 0) As Double = (0.0);
            Dim Y(0, 0) As Double = (0.0);
            Dim Z(0, 0) As Double = (0.0);
            Dim Layer(0, 0) As Integer = (0);
            Dim Direction(0, 0) As Double = (0.0);
            Dim Angle(0, 0) As Double = (0.0);
        }
    }
    Dim AllNodes(0, 0) As AgtSet = ();
    Dim Length(0, 0) As Double = (0.0);
    Dim SpringPower(0, 0) As Double = (0.0);
    Dim RepulsiveForce(0, 0) As Double = (0.0);
    Dim Degree(0, 0) As Integer = (0);
    Dim NumberOfNodes(0, 0) As Integer = (0);
    Dim Width(0, 0) As Integer = (0);
    Dim Height(0, 0) As Integer = (0);
    Dim Cam(0, 0) As Agt = (0);
}


//-------------------------------------------------------
// Agent Variable Initial Data
//-------------------------------------------------------
Initial_Value {
    UNIVERSE.LENGTH = 1(6.0);
    UNIVERSE.SPRINGPOWER = 1(0.01);
    UNIVERSE.REPULSIVEFORCE = 1(0.0050);
    UNIVERSE.DEGREE = 1(40);
    UNIVERSE.NUMBEROFNODES = 1(100);
    UNIVERSE.NETWORK.CAMERA.X = 1(70.0);
    UNIVERSE.NETWORK.CAMERA.Y = 1(70.0);
    UNIVERSE.NETWORK.CAMERA.Z = 1(0.0);
    UNIVERSE.NETWORK.CAMERA.LAYER = 1(0);
    UNIVERSE.NETWORK.CAMERA.DIRECTION = 1(0.0);
    UNIVERSE.NETWORK.CAMERA.ANGLE = 1(-30.0);
}


//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE
Univ_Init{
	ClearConsoleScreen()
	
	Error()
	
	AgtCreate()

	Universe.Width = GetWidthSpace(Universe.Network)
	Universe.Height = GetHeightSpace(Universe.Network)
	
	RandomPutAgtSet(Universe.AllNodes)
	SetLink()
	GroupingNodes()	
}

Univ_Step_Begin{

	LayoutNodes()
//	println(GetCountStep())
}

Univ_Step_End{

}

Univ_Finish{

}

Sub Error() {

	if Universe.NumberOfNodes * (Universe.NumberOfNodes -1 )/2  < Universe.Degree then
		ExitSimulationMsg("ノード数に対して次数が過剰です。") 
	end if

}

Sub AgtCreate() {

Dim i As Integer
Dim node As Agt 

	for i = 0 to Universe.NumberOfNodes -1
		node = CreateAgt(Universe.Network.Node)
		AddAgt(Universe.AllNodes,node)
	next i
	Universe.Cam = GetAgt( Universe.AllNodes, 0 )

}


Sub SetLink() {

Dim target As Agt
Dim link_agt As Agt

Dim is_overlap As Boolean

Dim i  As Integer

i = 0

	Do While i <Universe.Degree
		is_overlap = false 
		target = GetAGt(Universe.AllNodes,CInt(Rnd()*(CountAgtSet(Universe.AllNodes))))
		link_agt = GetAGt(Universe.AllNodes,CInt(Rnd()*(CountAgtSet(Universe.AllNodes))))
		for each one in target.Link_AgtSet
			if link_agt == one then
				is_overlap = true
			end if
		next one
		if target <> link_agt AND is_overlap == false then
			AddAgt(target.Link_AgtSet , link_agt)
			AddAgt(link_agt.Link_AgtSet,target)	
			i = i + 1
		end if
	Loop
}

Sub GroupingNodes() {

Dim group_ID As Integer

Dim checkedAgtSet As AgtSet
Dim targetAgtSet As AgtSet

Dim target As Agt
Dim is_exist_target As Boolean

Dim set_color As Integer

group_ID = 1
set_color = RGB(Rnd()*150 + 100,Rnd()*150 + 100,Rnd()*150 + 100)

	for each node in Universe.AllNodes
		ClearAgtSet(targetAgtSet)
		if node.GroupID == 0 then
			AddAgt(targetAgtSet,node)
			is_exist_target = true
			Do While is_exist_target == true
				target = GetAgt(targetAgtSet,0)
				target.GroupID = group_ID
				target.Color = set_color
				AddAgt(checkedAgtSet,target)
				RemoveAgt(targetAgtSet,target)
				for each linker in target.Link_AgtSet
					if GetAgtEntry(checkedAgtSet, linker) == -1 then
						AddAgt(targetAgtSet,linker)
					end if				
				next linker
				if CountAgtSet(targetAgtSet) == 0 then
					is_exist_target = false
				end if
			Loop
			group_ID = group_ID + 1
			set_color = RGB(Rnd()*150 + 100,Rnd()*150 + 100,Rnd()*150 + 100)
		end if
	next node

}

Sub LayoutNodes() {


Dim delta_X As Double
Dim delta_Y As Double
Dim delta_Z As Double
Dim prev_X As Double
Dim prev_Y As Double
Dim prev_Z As Double
Dim dist As Double
Dim length As Double
Dim inward_power As Double
Dim outward_power As Double

Dim dist_X As Double
Dim dist_Y As Double

length = Universe.Length
inward_power = Universe.SpringPower
outward_power = Universe.RepulsiveForce
	
	for each node  in Universe.AllNodes
		delta_X = 0
		delta_Y = 0
		delta_Z = 0
		prev_X = node.X
		prev_Y = node.Y
		prev_Z = node.Z
		for each target in node.Link_AgtSet
			dist = MeasureDistance(node.X,node.Y,target.X,target.Y,Universe.Network)
			delta_X = delta_X + (target.X -node.X) * (dist - length)*inward_power
			delta_Y = delta_Y + (target.Y -node.Y) * (dist - length)*inward_power
			delta_Z = delta_Z + (target.Z -node.Z) * (dist - length)*inward_power
		next target
		for each  target in Universe.AllNodes 
			if node <> target  then
				dist = MeasureDistance3D(node.X,node.Y,node.Z,target.X,target.Y,target.Z)
				if dist <> 0 then
					delta_X = delta_X + (target.X -node.X) / (dist ^2)*-outward_power
					delta_Y = delta_Y + (target.Y -node.Y) / (dist ^2)*-outward_power
					delta_Z = delta_Z + (target.Y -node.Z) / (dist ^2)*-outward_power
				else 
					delta_X = delta_X + Rnd()*0.1 - 0.5
					delta_Y = delta_Y + Rnd()*0.1 - 0.5
					delta_Z = delta_Z + Rnd()*0.1 - 0.5
				end if
			end if		
		next target
		if Universe.Width/2 > node.X then
			delta_X = delta_X - 1 / (node.X ^2)*-outward_power * 20
		else
			delta_X = delta_X + 1 / ((Universe.Width - node.X) ^2)*-outward_power * 20
		end if		
		if Universe.Height/2 > node.Y then
			delta_Y = delta_Y - 1 / (node.Y ^2)*-outward_power * 20
		else
			delta_Y = delta_Y + 1 / ((Universe.Height - node.Y) ^2)*-outward_power * 20
		end if
		if 50/2 > node.Z then
			delta_Z = delta_Z - 1 / (node.Z ^2)*-outward_power * 20
		else
			delta_Z = delta_Z + 1 / ((30 - node.Z) ^2)*-outward_power * 20
		end if
		node.X = node.X + delta_X
		node.Y = node.Y + delta_Y
		node.Z = node.Z + delta_Z
		if  node.X  < 0 OR node.X > Universe.Width OR node.Y < 0 OR node.Y > Universe.Height  OR node.Z < 2 OR node.Z > 50 then
				node.X = prev_X
				node.Y = prev_Y
				node.Z = prev_Z
		end if
	next node	
}

Function MeasureDistance3D( ox As Double, oy As Double, oz As Double , tx As Double , ty As Double , tz As Double ) As Double {
Dim dist As Double
	dist = ((ox  -  tx ) ^2 + ( oy - ty ) ^ 2 + (oz - tz )^2)^0.5
	return dist

}
#end_rule UNIVERSE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.NETWORK.NODE
Agt_Init{
	My.Z = Rnd() * 48 + 1
}

Agt_Step{


//	my.Angle = my.Angle + 1
//	my.Direction = my.Direction + 1
}
	
#end_rule UNIVERSE.NETWORK.NODE




//-------------------------------------------------------
// Agent Rule
//-------------------------------------------------------
#begin_rule UNIVERSE.NETWORK.CAMERA
Agt_Init{
	my.Direction = 230
	my.Z = 5
	my.Angle = -10
}

Agt_Step{
//	my.Direction = my.Direction + 1
	Universe.Cam = my
}
#end_rule UNIVERSE.NETWORK.CAMERA




//-------------------------------------------------------
// Simulation Definition Division
//-------------------------------------------------------
Single_Simulation {
    Step_Max = 0;
    Time_Max = 0;
    End_Condition = "";
    Exec_Wait = 1;
    Exec_Wait_Max = 0;
    Random_Generator = Java_Standard;
    Exec_Order = Random;
    Exec_Order_Random_First_Step_Only = No;
    Random_Seed = 0;
    Redraw_Timing = Step;
    Redraw_Interval = 1;
    Garbage_Interval = 0;
}


//-------------------------------------------------------
// Simulation Loop Definition Division
//-------------------------------------------------------
Repeat_Simulation {
    Value_Change = None;
    Initial_Value_Change_None {
        Repeat_Max = 1;
    }
}


//-------------------------------------------------------
// 2 Dimension Map Display Definition Division
//-------------------------------------------------------
Map_Output {
    Map_Space_Name = "Universe.Network";
    Map_Name = "Network";
    Title = "Network";
    Disable = No;
    Background_Color = 255, 255, 255;
    Position_x = 62;
    Position_y = 119;
    Size_x = 542;
    Size_y = 535;
    Map_Cell_Size = 9;
    Remarks = No;
    Legend_Pos = Top;
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    FastDraw = No;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Axis_Label = "", "";
    Draw_Range = 0, 0, 50, 50;
    Ruled_Line = No;
    Text_Display = No;
    Text_Display_Variable_Name = "";
    Chess_Type_Display_Position = Yes;
    Background_Transparent = No;
    Target_Layer = 0;
    Coordinate_Display = No;
    Space_Kind = Square_2D;
    BG_Pict = No;
    BG_Type = 0;
    BG_Var_Name = "";
    BG_File_Name = "";
    Origin_Position = 2;
    Output_Group_Name = "";
    Output {
        Map_Element_Name = "Node";
        Map_Element = Agent_Variable;
        Output_Expression = "Universe.Network.Node";
        Draw_Line = Yes;
        Collection_Name = "Universe.Network.Node.Link_AgtSet";
        Line_Type = 1;
        Line_Arrow = 1;
        Line_Width = 1;
        Line_Color = 0, 0, 0;
        Line_Type_Variable = "";
        Line_Arrow_Variable = "";
        Line_Width_Variable = "";
        Line_Color_Variable = "";
        Agent_Color = "Universe.Network.Node.Color";
        Marker_Id = 1;
        Effective_Figures = 0;
        Format_Id = 0;
        Agent_Image_Direction = No;
        Icon_Type = 0;
        Icon_Var_Name = "";
        Icon_Transparent = No;
        Icon_Enlarg_Reduce = No;
        Icon_File_Name = "";
        Num_Display = No;
        Num_Var_Name = "Universe.Network.Node.GroupID";
        Agent_Image_Magnify_by_value = Yes;
        Agent_Image_Magnify_Value = 1.0;
        Agent_Image_Magnify_Variable_Name = "Universe.Network.Node.ID";
        Agent_Image_Transparency_by_value = Yes;
        Agent_Image_Transparency_Value = 0.0;
        Agent_Image_Transparency_Variable_Name = "Universe.Network.Node.ID";
    }
}


//-------------------------------------------------------
//  3 Dimension Map Display Definition Division
//-------------------------------------------------------
Map3D_Output {
    Map3D_Name = "3DMap";
    Disable = Yes;
    Background_Image_Display = No;
    Background_Image_Type = Fixed_Value;
    Background_Image_Folder_Name = "";
    Background_Image_Folder_Variable_Name = Dummy;
    Background_Color = -16777216;
    FastDraw = No;
    Line_Display = Yes;
    Camera_Position_Type = Mouse;
    Camera_Position_Agent_Name = Universe.Cam;
    Light_Position_Type = Coordinate;
    Light_Position = 0.0,0.0,0.0;
    Light_Position_Agent_Name = Dummy;
    Output_Group_Name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 81;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 255, 255, 255;
    Position_x = 0;
    Position_y = 0;
    Size_x = 784;
    Size_y = 589;
    Map_Cell_Size = 0;
    Draw_Timing = Simulation_Step;
    Draw_Interval = 1;
    Space3D_Output {
        Space_3D_Name = "3DMap";
        Space_Path_Name = Universe.Network;
        Layer = 0;
        Space_3D_PositionD = 0.0,0.0,0.0;
        Ruled_Line_Display = No;
        Origin_Position = Left_Top;
        Display_Object_Type = None;
        Image_File_Path_Name = "画像/floor.jpg";
        Model_3D_File_Path_Name = "";
        Agent3D_Output {
                Agent_3D_Name = "Node";
                Agent_Path_Name = Universe.Network.Node;
                Display_Object_Type = Image_File;
                Display_Object_Image_Id = Sphere_Prism;
                Model_3D_File_Path_Name = "";
                Color_Type = Image_File;
                Color_Value = -65485;
                Color_Variable_Path_Name = Universe.Network.Node.Color;
                Smooth_Movement = Yes;
                Draw_line = Yes;
                Line_AgtSet_Variable_Path_Name = "Universe.Network.Node.Link_AgtSet";
                Line_Type = 1;
                Line_Type_Variable_Path_Name = "";
                Line_Arrow = 1;
                Line_Arrow_Variable_Path_Name = "";
                Line_Color = -16724941;
                Line_Color_Variable_Path_Name = "";
                Magnify_Value = 1.0;
                Magnify_Variable_Path_Name = "";
        }
    }
}


//-------------------------------------------------------
// Control Panel Definition Division
//-------------------------------------------------------
Control_Panel {
    Display_Area = 453, 228, 676, 100;
    Display_Type = 1;
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "ノード数";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.NumberOfNodes";
        Text_Data = "100";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "次数";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Degree";
        Text_Data = "40";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "バネ自然長";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.Length";
        Text_Data = "6.0";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "バネ弾性力係数";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.SpringPower";
        Text_Data = "0.01";
    }
    Panel_Item {
        Item_Type = Edit_Box;
        Item_Name = "ノード間斥力係数";
        Display_Area = 0, 0, 0, 0;
        Font_Name = "";
        Font_Char_Set = 0;
        Font_Size = 0.0;
        Font_Style = 0;
        Font_Color = 0, 0, 0;
        Font_Background_Color = 0, 0, 0;
        Var_Name = "Universe.RepulsiveForce";
        Text_Data = "0.0050";
    }
}


//-------------------------------------------------------
// Space Initial Value Definition Divsion
//-------------------------------------------------------
Space_Initial {
}


//-------------------------------------------------------
// Other Miscellaneous Data Definition Division
//-------------------------------------------------------
Others_Data {
    Indent = 4;
    Rule_Colored = Yes;
    Rule_LineNo = Yes;
    Window_Hide_Run = 1;
    Debug_Position_x = 75;
    Debug_Position_y = 75;
    Debug_Size_x = 400;
    Debug_Size_y = 200;
    Console_Position_x = 930;
    Console_Position_y = 846;
    Console_Size_x = 746;
    Console_Size_y = 120;
    Componen_Tree_Position_x = 1192;
    Componen_Tree_Position_y = 499;
    Componen_Tree_Size_x = 250;
    Componen_Tree_Size_y = 400;
    Console_Background_Color = 16777215;
    Console_Foreground_Color = 255;
    Console_DisplayLines_Max = 500;
    plug_in_module_name = "";
    Font_Name = "Dialog";
    Font_Char_Set = 0;
    Font_Size = 12.0;
    Font_Style = 0;
    Font_Color = 0, 0, 0;
    Font_Background_Color = 0, 0, 0;
}


//-------------------------------------------------------
// Network Information Definition Division
//-------------------------------------------------------
Network_Info {
    Global_Space_Area = 0, 0, 100, 100;
    Local_Space_Info {
    }
}


//-------------------------------------------------------
// Window Location Definition Division
//-------------------------------------------------------
Window_Rectangle {
    Window_Name = Main_Window, 0, 0, 800, 700;
    Window_Name = Output_Setting_Window, 175, 175, 480, 350;
    Window_Name = Artisoc_Help_Window, 10, 10, 400, 300;
    Window_Name = Map_3D_Setting_Window, 60, 100, 680, 500;
    Window_Name = Space_3D_Setting_Window, 175, 70, 450, 560;
}


//-------------------------------------------------------
// Help Favorite Division
//-------------------------------------------------------
Help_Favorite {
}
